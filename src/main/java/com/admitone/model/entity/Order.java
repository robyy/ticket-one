package com.admitone.model.entity;

import java.io.Serializable;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * An entity Event composed by 5 fields (id, user, event, qty, approveStatus
 * eventTime). The Entity annotation indicates that this class is a JPA entity.
 * The Table annotation specifies the name for the table in the db which is
 * embedded h2.
 *
 * @author yyan
 */

@Entity
@Table(name = "orders", //uniqueConstraints = { @UniqueConstraint(columnNames = { "EVENT_ID", "USER_ID" }) }, 
indexes = {@Index(name = "user_event_idx",  columnList="USER_ID, EVENT_ID", unique = true),
        @Index(name = "user_idx", columnList="USER_ID", unique = false),
        @Index(name = "event_idx", columnList="EVENT_ID", unique = false)})
public class Order implements Serializable {
	// Notice that Hibernate generates columns in alphabetical order

	// An autogenerated id (unique for each user in the db)
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id;

	// The @ManyToOne side will always be the owner of the relationship. There
	// is no way of using the mappedBy attribute inside the @ManyToOne
	// annotation.
	// Being the relationship owner is nothing more than to have the foreign key
	// in the database table
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_ID")
	private User user;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EVENT_ID")
	private Event event;

	private int qty;

	private boolean approveStatus;

	public Order() { // jpa
	}

	public Order(User user, Event event, int qty) {
		this.user = user;
		this.event = event;
		this.qty = qty;
		this.approveStatus = true;
	}
	
	public Order(long id, User user, Event event, int qty) {
		this.id = id;
		this.user = user;
		this.event = event;
		this.qty = qty;
		this.approveStatus = true;
	}

	public Event getEvent() {
		return event;
	}

	public void setEvent(Event event) {
		this.event = event;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public int getQty() {
		return qty;
	}

	public void setQty(int qty) {
		this.qty = qty;
	}

	public boolean isApproved() {
		return approveStatus;
	}

	public void setApproveStatus(boolean approveStatus) {
		this.approveStatus = approveStatus;
	}

	public long getId() {
		return id;
	}

}
